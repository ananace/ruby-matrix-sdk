---
GET|_matrix/client/versions:
  method: :client_api_versions
  results:
    200: |
      {
        "versions": [
          "r0.0.1"
        ]
      }
GET|_matrix/client/r0/login:
  method: :allowed_login_methods
  results:
    429: &429 |
      {
        "errcode": "M_LIMIT_EXCEEDED",
        "error": "Too many requests",
        "retry_after_ms": 2000
      }
    200: |
      {
        "flows": [
          {
            "type": "m.login.password"
          }
        ]
      }
POST|_matrix/client/r0/login:
  method: :login
  requests:
    - args: [{ initial_device_display_name: 'test', identifier: { type: 'm.id.user', user: 'cheeky_monkey' } }]
      body:
        :type: 'm.login.password'
        :initial_device_display_name: 'test'
        :identifier:
          :type: 'm.id.user'
          :user: 'cheeky_monkey'
  results:
    200: |
      {
        "user_id": "@cheeky_monkey:matrix.org",
        "access_token": "abc123",
        "device_id": "GHTYAJCE"
      }
    400: |
      {
        "errcode": "M_UNKNOWN",
        "error": "Bad login type."
      }
    403: |
      {
        "errcode": "M_FORBIDDEN"
      }
    429: *429
POST|_matrix/client/r0/logout:
  method: :logout
  results:
    200: |
      {}
POST|_matrix/client/r0/logout/all:
  method: :logout_all
  results:
    200: |
      {}
POST|_matrix/client/r0/register:
  method: :register
  requests:
    - args: [{ kind: 'guest' }]
      query:
        :kind: 'guest'
      body: {}
    - args: [{ username: 'test', password: 'testing' }]
      query:
        :kind: 'user'
      body:
        :username: 'test'
        :password: 'testing'
  results:
    200: |
      {
        "user_id": "@cheeky_monkey:matrix.org",
        "access_token": "abc123",
        "device_id": "GHTYAJCE"
      }
    400: |
      {
        "errcode": "M_USER_IN_USE",
        "error": "Desired user ID is already taken."
      }
    401: |
      {
        "flows": [
          {
            "stages": [
              "example.type.foo"
            ]
          }
        ],
        "params": {
          "example.type.baz": {
            "example_key": "foobar"
          }
        },
        "session": "xxxxxxyz",
        "completed": [
          "example.type.foo"
        ]
      }
    429: *429
POST|_matrix/client/r0/register/email/requestToken:
  method: :register_email_request
  requests:
    - args: ['monkeys_are_GREAT', 'alice@example.org', { next_link: 'https://example.org/congratulations.html' }]
      path: '/register/email/requestToken'
      query: null
      body:
        :client_secret: 'monkeys_are_GREAT'
        :email: 'alice@example.org'
        :send_attempt: 1
        :next_link: 'https://example.org/congratulations.html'
  results:
    200: |
      {
        "sid": "123abc"
      }
    400: |
      {
        "errcode": "M_THREEPID_IN_USE",
        "error": "The specified address is already in use"
      }
    403: |
      {
        "errcode": "M_THREEPID_DENIED",
        "error": "Third party identifier is not allowed"
      }
POST|_matrix/client/r0/register/msisdn/requestToken:
  method: :register_msisdn_request
  requests:
    - args: ['monkeys_are_GREAT', 'GB', '07700900001', { next_link: 'https://example.org/congratulations.html' }]
      path: '/register/msisdn/requestToken'
      query: null
      body:
        :client_secret: 'monkeys_are_GREAT'
        :country: 'GB'
        :phone_number: '07700900001'
        :send_attempt: 1
        :next_link: 'https://example.org/congratulations.html'
  results:
    200: |
      {
        "sid": "123abc"
      }
    400: |
      {
        "errcode": "M_THREEPID_IN_USE",
        "error": "The specified address is already in use"
      }
    403: |
      {
        "errcode": "M_THREEPID_DENIED",
        "error": "Third party identifier is not allowed"
      }
POST|_matrix/client/r0/account/password:
  method: :change_password
  requests:
    - args: ['newpass', auth: { type: 'm.null' }]
      query: {}
      body:
        :new_password: 'newpass'
        :auth:
          :type: 'm.null'
  results:
    200: |
      {}
    401: |
      {
        "flows": [
          {
            "stages": [
              "example.type.foo"
            ]
          }
        ],
        "params": {
          "example.type.baz": {
            "example_key": "foobar"
          }
        },
        "session": "xxxxxxyz",
        "completed": [
          "example.type.foo"
        ]
      }
    429: *429
POST|/_matrix/client/r0/account/password/email/requestToken:
  method: :request_email_login_token
  requests:
    - args: ['monkeys_are_GREAT', 'alice@example.org', { next_link: 'https://example.org/congratulations.html' }]
      path: '/account/password/email/requestToken'
      query: null
      body:
        :client_secret: 'monkeys_are_GREAT'
        :email: 'alice@example.org'
        :send_attempt: 1
        :next_link: 'https://example.org/congratulations.html'
  results:
    200: |
      {
        "sid": "123abc"
      }
    400: |
      {
        "errcode": "M_THREEPID_IN_USE",
        "error": "The specified address is already in use"
      }
    403: |
      {
        "errcode": "M_THREEPID_DENIED",
        "error": "Third party identifier is not allowed"
      }
POST|/_matrix/client/r0/account/password/msisdn/requestToken:
  method: :request_msisdn_login_token
  requests:
    - args: ['monkeys_are_GREAT', 'GB', '07700900001', { next_link: 'https://example.org/congratulations.html' }]
      path: '/account/password/msisdn/requestToken'
      query: null
      body:
        :client_secret: 'monkeys_are_GREAT'
        :country: 'GB'
        :phone_number: '07700900001'
        :send_attempt: 1
        :next_link: 'https://example.org/congratulations.html'
  results:
    200: |
      {
        "sid": "123abc"
      }
    400: |
      {
        "errcode": "M_THREEPID_IN_USE",
        "error": "The specified address is already in use"
      }
    403: |
      {
        "errcode": "M_THREEPID_DENIED",
        "error": "Third party identifier is not allowed"
      }
POST|/_matrix/client/r0/account/deactivate:
  method: :deactivate_account
  requests:
    - args: [{ type: 'example.type.foo', session: 'xxxxx', example_credential: 'verypoorsharedsecret' }, { id_server: 'example.org' }]
      path: '/account/deactivate'
      query: null
      body:
        :auth:
          :type: 'example.type.foo'
          :session: 'xxxxx'
          :example_credential: 'verypoorsharedsecret'
        :id_server: 'example.org'
  results:
    200: |
      {
        "id_server_unbind_result": "success"
      }
    401: |
      {
        "flows": [
          {
            "stages": [
              "example.type.foo"
            ]
          }
        ],
        "params": {
          "example.type.baz": {
            "example_key": "foobar"
          }
        },
        "session": "xxxxxxyz",
        "completed": [
          "example.type.foo"
        ]
      }
    429: *429
GET|/_matrix/client/r0/register/available:
  method: :username_available?
  requests:
    - args: ['example']
      query:
        :username: 'example'
      body: null
  results:
    200: |
      {
        "available": true
      }
    400: |
      {
        "errcode": "M_USER_IN_USE",
        "error": "Desired user ID is already taken."
      }
    429: *429
GET|/_matrix/client/r0/account/3pid:
  method: :get_3pids
  requests:
    - args: []
      query: {}
      body: null
  results:
    200: |
      {
        "threepids": [
          {
            "medium": "email",
            "address": "monkey@banana.island",
            "validated_at": 1535176800000,
            "added_at": 1535336848756
          }
        ]
      }
# POST|/_matrix/client/r0/account/3pid:
#   deprecated: true
POST|/_matrix/client/r0/account/3pid/add:
  method: :complete_3pid_add
  requests:
    - args: [{session: 'abc123987', secret: "d0n'tT3ll"}]
      query: null
      body:
        :client_secret: "d0n'tT3ll"
        :sid: 'abc123987'
  results:
    200: |
      {}
    401: |
      {
        "flows": [
          {
            "stages": [
              "example.type.foo"
            ]
          }
        ],
        "params": {
          "example.type.baz": {
            "example_key": "foobar"
          }
        },
        "session": "xxxxxxyz",
        "completed": [
          "example.type.foo"
        ]
      }
    429: *429
POST|/_matrix/client/r0/account/3pid/bind:
  method: :bind_3pid
  requests:
    - args: [{secret: "d0n'tT3ll", id_server: 'example.org', id_server_token: 'abc123_OpaqueString', session: 'abc123987'}]
      query: null
      body:
        :client_secret: "d0n'tT3ll"
        :id_server: 'example.org'
        :id_server_token: 'abc123_OpaqueString'
        :sid: 'abc123987'
  results:
    200: |
      {}
    429: *429
POST|/_matrix/client/r0/account/3pid/delete:
  method: :delete_3pid
  requests:
    - args: ['email', 'example@example.org', {id_server: 'example.org'}]
      query: null
      body:
        :address: 'example@example.org'
        :id_server: 'example.org'
        :medium: 'email'
    - args: ['msisdn', '07700900001', {id_server: 'example.org'}]
      query: null
      body:
        :address: '07700900001'
        :id_server: 'example.org'
        :medium: 'msisdn'
  results:
    200: |
      {
        "id_server_unbind_result": "success"
      }
    429: *429
POST|/_matrix/client/r0/account/3pid/unbind:
  method: :unbind_3pid
  requests:
    - args: ['email', 'example@example.org', {id_server: 'example.org'}]
      query: null
      body:
        :address: 'example@example.org'
        :id_server: 'example.org'
        :medium: 'email'
    - args: ['msisdn', '07700900001', {id_server: 'example.org'}]
      query: null
      body:
        :address: '07700900001'
        :id_server: 'example.org'
        :medium: 'msisdn'
  results:
    200: |
      {
        "id_server_unbind_result": "success"
      }
    429: *429
POST|/_matrix/client/r0/account/3pid/email/requestToken: {}
POST|/_matrix/client/r0/account/3pid/msisdn/requestToken: {}
GET|/_matrix/client/r0/account/whoami:
  method: :whoami?
  results:
    200: |
      {
        "user_id": "@joe:example.org"
      }
    401: |
      {
        "errcode": "M_UNKNOWN_TOKEN",
        "error": "Unrecognised access token."
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "Application service has not registered this user."
      }
    429: *429
POST|/_matrix/client/r0/user/{userId}/filter:
  method: :create_filter
  requests:
    - args: ['@alice:example.com', { room: { state: { types: ['m.room.*'] } } }]
      path: '/user/%40alice%3Aexample.com/filter'
      body:
        :room:
          :state:
            :types:
              - 'm.room.*'
  results:
    200: |
      {
        "filter_id": "66696p746572"
      }
GET|/_matrix/client/r0/user/{userId}/filter/{filterId}:
  method: :get_filter
  requests:
    - args: ['@alice:example.com', '66696p746572']
      path: '/user/%40alice%3Aexample.com/filter/66696p746572'
  results:
    200: |
      {
        "room": {
          "state": {
            "types": [
              "m.room.*"
            ],
            "not_rooms": [
              "!726s6s6q:example.com"
            ]
          },
          "timeline": {
            "limit": 10,
            "types": [
              "m.room.message"
            ],
            "not_rooms": [
              "!726s6s6q:example.com"
            ],
            "not_senders": [
              "@spam:example.com"
            ]
          },
          "ephemeral": {
            "types": [
              "m.receipt",
              "m.typing"
            ],
            "not_rooms": [
              "!726s6s6q:example.com"
            ],
            "not_senders": [
              "@spam:example.com"
            ]
          }
        },
        "presence": {
          "types": [
            "m.presence"
          ],
          "not_senders": [
            "@alice:example.com"
          ]
        },
        "event_format": "client",
        "event_fields": [
          "type",
          "content",
          "sender"
        ]
      }
GET|/_matrix/client/r0/sync:
  method: :sync
  requests:
    - args: [{ filter: '66696p746572', since: 's72594_4483_1934', full_state: false, set_presence: 'offline', timeout: 30 }]
      query:
        :filter: '66696p746572'
        :since: 's72594_4483_1934'
        :full_state: false
        :set_presence: 'offline'
        :timeout: 30000
  results:
    200: |
      {
        "too big": "and 100% ignored by the API abstraction"
      }
GET|/_matrix/client/r0/rooms/{roomId}/event/{eventId}:
  method: :get_room_event
  requests:
    - args: ['!636q39766251:matrix.org', '$asfDuShaf7Gafaw:matrix.org']
      path: '/rooms/%21636q39766251%3Amatrix.org/event/%24asfDuShaf7Gafaw%3Amatrix.org'
  results:
    200: |
      {
        "content": {
          "body": "This is an example text message",
          "msgtype": "m.text",
          "format": "org.matrix.custom.html",
          "formatted_body": "<b>This is an example text message</b>"
        },
        "type": "m.room.message",
        "event_id": "$143273582443PhrSn:example.org",
        "room_id": "!636q39766251:matrix.org",
        "sender": "@example:example.org",
        "origin_server_ts": 1432735824653,
        "unsigned": {
          "age": 1234
        }
      }
GET|/_matrix/client/r0/rooms/{roomId}/state/{eventType}/{stateKey}:
  method: :get_room_state
  requests:
    - args: ['!636q39766251:example.com', 'm.room.name', key: 'something']
      path: '/rooms/%21636q39766251%3Aexample.com/state/m.room.name/something'
  results:
    200: |
      {
        "name": "Example room name"
      }
GET|/_matrix/client/r0/rooms/{roomId}/state/{eventType}:
  method: :get_room_state
  requests:
    - args: ['!636q39766251:example.com', 'm.room.name']
      path: '/rooms/%21636q39766251%3Aexample.com/state/m.room.name'
  results:
    200: |
      {
        "name": "Example room name"
      }
GET|/_matrix/client/r0/rooms/{roomId}/state:
  method: :get_room_state_all
  requests:
    - args: ['!636q39766251:example.com']
      path: '/rooms/%21636q39766251%3Aexample.com/state'
  results:
    200: |
      [
        {
          "content": {
            "join_rule": "public"
          },
          "type": "m.room.join_rules",
          "event_id": "$143273582443PhrSn:example.org",
          "room_id": "!636q39766251:example.com",
          "sender": "@example:example.org",
          "origin_server_ts": 1432735824653,
          "unsigned": {
            "age": 1234
          },
          "state_key": ""
        },
        {
          "content": {
            "membership": "join",
            "avatar_url": "mxc://example.org/SEsfnsuifSDFSSEF",
            "displayname": "Alice Margatroid"
          },
          "type": "m.room.member",
          "event_id": "$143273582443PhrSn:example.org",
          "room_id": "!636q39766251:example.com",
          "sender": "@example:example.org",
          "origin_server_ts": 1432735824653,
          "unsigned": {
            "age": 1234
          },
          "state_key": "@alice:example.org"
        },
        {
          "content": {
            "creator": "@example:example.org",
            "room_version": "1",
            "m.federate": true,
            "predecessor": {
              "event_id": "$something:example.org",
              "room_id": "!oldroom:example.org"
            }
          },
          "type": "m.room.create",
          "event_id": "$143273582443PhrSn:example.org",
          "room_id": "!636q39766251:example.com",
          "sender": "@example:example.org",
          "origin_server_ts": 1432735824653,
          "unsigned": {
            "age": 1234
          },
          "state_key": ""
        },
        {
          "content": {
            "ban": 50,
            "events": {
              "m.room.name": 100,
              "m.room.power_levels": 100
            },
            "events_default": 0,
            "invite": 50,
            "kick": 50,
            "redact": 50,
            "state_default": 50,
            "users": {
              "@example:localhost": 100
            },
            "users_default": 0,
            "notifications": {
              "room": 20
            }
          },
          "type": "m.room.power_levels",
          "event_id": "$143273582443PhrSn:example.org",
          "room_id": "!636q39766251:example.com",
          "sender": "@example:example.org",
          "origin_server_ts": 1432735824653,
          "unsigned": {
            "age": 1234
          },
          "state_key": ""
        }
      ]
GET|/_matrix/client/r0/rooms/{roomId}/members:
  method: :get_room_members
  requests:
    - args: ['!636q39766251:example.com']
      path: '/rooms/%21636q39766251%3Aexample.com/members'
  results:
    200: |
      {
        "chunk": []
      }
GET|/_matrix/client/r0/rooms/{roomId}/joined_members:
  method: :get_room_joined_members
  requests:
    - args: ['!636q39766251:example.com']
      path: '/rooms/%21636q39766251%3Aexample.com/joined_members'
  results:
    200: |
      {
        "joined": {
          "@bar:example.com": {
            "display_name": "Bar",
            "avatar_url": "mxc://riot.ovh/printErCATzZijQsSDWorRaK"
          }
        }
      }
    403: |
      {}
GET|/_matrix/client/r0/rooms/{roomId}/messages:
  method: :get_room_messages
  requests:
    - args: ['!636q39766251:example.com', 's345_678_333', { limit: 3, direction: 'b', filter: { contains_url: true } }]
      path: '/rooms/%21636q39766251%3Aexample.com/messages'
      query:
        :from: 's345_678_333'
        :dir: 'b'
        :limit: 3
        :filter:
          :contains_url: true
  results:
    200: |
      {
        "start": "t47429-4392820_219380_26003_2265",
        "end": "t47409-4357353_219380_26003_2265",
        "chunk": [ ]
      }
PUT|/_matrix/client/r0/rooms/{roomId}/state/{eventType}/{stateKey}:
  method: :send_state_event
  requests:
    - args: ['!636q39766251:example.com', 'm.room.member', { membership: 'join', avatar_url: 'mxc://...' }, { state_key: '@alice:example.com' }]
      path: '/rooms/%21636q39766251%3Aexample.com/state/m.room.member/%40alice%3Aexample.com'
      body:
        :membership: 'join'
        :avatar_url: 'mxc://...'
  results:
    200: |
      {
        "event_id": "$YUwRidLecu:example.com"
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You do not have permission to send the event."
      }
PUT|/_matrix/client/r0/rooms/{roomId}/state/{eventType}:
  method: :send_state_event
  requests:
    - args: ['!636q39766251:example.com', 'm.room.name', { name: 'Room name' }]
      path: '/rooms/%21636q39766251%3Aexample.com/state/m.room.name'
      body:
        :name: 'Room name'
  results:
    200: |
      {
        "event_id": "$YUwRidLecu:example.com"
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You do not have permission to send the event."
      }
PUT|/_matrix/client/r0/rooms/{roomId}/send/{eventType}/{txnId}:
  method: :send_message_event
  requests:
    - args: ['!636q39766251:example.com', 'm.room.message', { msgtype: 'm.text', body: 'hello' }, { txn_id: 35 }]
      path: '/rooms/%21636q39766251%3Aexample.com/send/m.room.message/35'
      body:
        :msgtype: 'm.text'
        :body: 'hello'
  results:
    200: |
      {
        "event_id": "$YUwRidLecu:example.com"
      }
PUT|/_matrix/client/r0/rooms/{roomId}/redact/{eventId}/{txnId}:
  method: :redact_event
  requests:
    - args: ['!636q39766251:example.com', '$bai2b1i9:matrix.org', { reason: 'Indecent material', txn_id: 37 }]
      path: '/rooms/%21636q39766251%3Aexample.com/redact/%24bai2b1i9%3Amatrix.org/37'
      body:
        :reason: 'Indecent material'
  results:
    200: |
      {
        "event_id": "$YUwRidLecu:example.com"
      }
POST|/_matrix/client/r0/createRoom:
  method: :create_room
  requests:
    - args: [{ preset: 'public_chat', room_alias: 'thepub', name: 'The Grand Duke Pub', topic: 'All about happy hour', creation_content: { 'm.federate': false } }]
      path: '/createRoom'
      query: {}
      body:
        :preset: 'public_chat'
        :room_alias_name: 'thepub'
        :name: 'The Grand Duke Pub'
        :topic: 'All about happy hour'
        :creation_content:
          :m.federate: false
        :visibility: :public
  results:
    200: |
      {
        "room_id": "!sefiuhWgwghwWgh:example.com"
      }
    400: |
      {
        "errcode": "M_UNKNOWN",
        "error": "An unknown error occurred"
      }
PUT|/_matrix/client/r0/directory/room/{roomAlias}:
  method: :set_room_alias
  requests:
    - args: ['!abnjk1jdasj98:capuchins.com', '#monkeys:matrix.org']
      path: '/directory/room/%23monkeys%3Amatrix.org'
      query: {}
      body:
        :room_id: '!abnjk1jdasj98:capuchins.com'
  results:
    200: |
      {}
    409: |
      {
        "errcode": "M_UNKNOWN",
        "error": "Room alias #monkeys:matrix.org already exists."
      }
GET|/_matrix/client/r0/directory/room/{roomAlias}:
  method: :get_room_id
  requests:
    - args: ['#monkeys:matrix.org']
      path: '/directory/room/%23monkeys%3Amatrix.org'
      query: {}
      body: null
  results:
    200: |
      {
        "room_id": "!abnjk1jdasj98:capuchins.com",
        "servers": [
          "capuchins.com",
          "matrix.org",
          "another.com"
        ]
      }
    404: |
      {
        "errcode": "M_NOT_FOUND",
        "error": "Room alias #monkeys:matrix.org not found."
      }
DELETE|/_matrix/client/r0/directory/room/{roomAlias}:
  method: :remove_room_alias
  requests:
    - args: ['#monkeys:matrix.org']
      path: '/directory/room/%23monkeys%3Amatrix.org'
      query: {}
      body: null
  results:
    200: |
      {}
GET|/_matrix/client/r0/joined_rooms:
  method: :get_joined_rooms
  requests:
    - args: []
      path: '/joined_rooms'
      query: {}
      body: null
  results:
    200: |
      {
        "joined_rooms": [
          "!foo:example.com"
        ]
      }
POST|/_matrix/client/r0/rooms/{roomId}/invite:
  method: :invite_user
  requests:
    - args: ['!d41d8cd:matrix.org', '@cheeky_monkey:matrix.org']
      path: '/rooms/%21d41d8cd%3Amatrix.org/invite'
      query: {}
      body:
        :user_id: '@cheeky_monkey:matrix.org'
  results:
    200: |
      {}
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "@cheeky_monkey:matrix.org is banned from the room"
      }
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/join:
  method: :join_room_id
  requests:
    - args: ['!nkl290a:matrix.org']
      path: '/rooms/%21nkl290a%3Amatrix.org/join'
      query: {}
      body: {}
    - args: ['!nkl290a:matrix.org', third_party_signed: { sender: '@alice:example.com', token: 'blah' }]
      path: '/rooms/%21nkl290a%3Amatrix.org/join'
      query: {}
      body:
        :third_party_signed:
          :sender: '@alice:example.com'
          :token: 'blah'
  results:
    200: |
      {
        "room_id": "!d41d8cd:matrix.org"
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You are not invited to this room."
      }
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/upgrade: {}
POST|/_matrix/client/r0/join/{roomIdOrAlias}:
  method: :join_room
  requests:
    - args: ['#monkeys:matrix.org', { server_name: ['matrix.org', 'elsewhere.ca'] }]
      path: '/join/%23monkeys%3Amatrix.org'
      query:
        :server_name: ['matrix.org', 'elsewhere.ca']
      body: {}
    - args: ['!d41d8cd:matrix.org']
      path: '/join/%21d41d8cd%3Amatrix.org'
      query: {}
      body: {}
  results:
    200: |
      {
        "room_id": "!d41d8cd:matrix.org"
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You are not invited to this room."
      }
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/leave:
  method: :leave_room
  requests:
    - args: ['!nkl290a:matrix.org']
      path: '/rooms/%21nkl290a%3Amatrix.org/leave'
      query: {}
      body: null
  results:
    200: |
      {}
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/forget:
  method: :forget_room
  requests:
    - args: ['!au1ba7o:matrix.org']
      path: '/rooms/%21au1ba7o%3Amatrix.org/forget'
      query: {}
      body: null
  results:
    200: |
      {}
    400: |
      {
        "errcode": "M_UNKNOWN",
        "error": "User @example:matrix.org is in room !au1ba7o:matrix.org"
      }
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/kick:
  method: :kick_user
  requests:
    - args: ['!e42d8c:matrix.org', '@cheeky_monkey:matrix.org', { reason: 'Telling unfunny jokes' }]
      path: '/rooms/%21e42d8c%3Amatrix.org/kick'
      query: {}
      body:
        :reason: 'Telling unfunny jokes'
        :user_id: '@cheeky_monkey:matrix.org'
  results:
    200: |
      {}
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You do not have a high enough power level to kick from this room."
      }
POST|/_matrix/client/r0/rooms/{roomId}/ban:
  method: :ban_user
  requests:
    - args: ['!e42d8c:matrix.org', '@cheeky_monkey:matrix.org', { reason: 'Telling unfunny jokes' }]
      path: '/rooms/%21e42d8c%3Amatrix.org/ban'
      query: {}
      body:
        :reason: 'Telling unfunny jokes'
        :user_id: '@cheeky_monkey:matrix.org'
  results:
    200: |
      {}
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You do not have a high enough power level to ban from this room."
      }
POST|/_matrix/client/r0/rooms/{roomId}/unban:
  method: :unban_user
  requests:
    - args: ['!e42d8c:matrix.org', '@cheeky_monkey:matrix.org']
      path: '/rooms/%21e42d8c%3Amatrix.org/unban'
      query: {}
      body:
        :user_id: '@cheeky_monkey:matrix.org'
  results:
    200: |
      {}
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You do not have a high enough power level to unban from this room."
      }
GET|/_matrix/client/r0/directory/list/room/{roomId}:
  method: :get_room_directory_visibility
  requests:
    - args: ['!au1ba7o:matrix.org']
      path: '/directory/list/room/%21au1ba7o%3Amatrix.org'
      query: {}
      body: null
  results:
    200: |
      {
        "visibility": "public"
      }
    404: |
      {
        "errcode": "M_NOT_FOUND",
        "error": "Room not found"
      }
PUT|/_matrix/client/r0/directory/list/room/{roomId}:
  method: :set_room_directory_visibility
  requests:
    - args: ['!au1ba7o:matrix.org', public]
      path: '/directory/list/room/%21au1ba7o%3Amatrix.org'
      query: {}
      body:
        :visibility: public
  results:
    200: |
      {}
    404: |
      {
        "errcode": "M_NOT_FOUND",
        "error": "Room not found"
      }
GET|/_matrix/client/r0/publicRooms:
  method: :get_public_rooms
  requests:
    - args: []
      method: :get
      path: '/publicRooms'
      query: {}
      body: null
    - args: [{ limit: 10, server: 'example.com' }]
      method: :get
      path: '/publicRooms'
      query:
        :limit: 10
        :server: example.com
      body: null
  results:
    200: |
      {
        "chunk": [
          {
            "aliases": [
              "#murrays:cheese.bar"
            ],
            "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
            "guest_can_join": false,
            "name": "CHEESE",
            "num_joined_members": 37,
            "room_id": "!ol19s:bleecker.street",
            "topic": "Tasty tasty cheese",
            "world_readable": true
          }
        ],
        "next_batch": "p190q",
        "prev_batch": "p1902",
        "total_room_count_estimate": 115
      }
POST|/_matrix/client/r0/publicRooms:
  method: :get_public_rooms
  requests:
    - args: [{ limit: 10, server: 'example.com', filter: 1 }]
      method: :post
      path: '/publicRooms'
      query:
        :server: example.com
      body:
        :limit: 10
        :filter: 1
    - args: [{ limit: 10, filter: { generic_search_term: foo }, include_all_networks: false, third_party_instance_id: irc }]
      method: :post
      path: '/publicRooms'
      query: {}
      body:
        :limit: 10
        :filter:
          :generic_search_term: foo
        :include_all_networks: false
        :third_party_instance_id: irc
  results:
    200: |
      {
        "chunk": [
          {
            "aliases": [
              "#murrays:cheese.bar"
            ],
            "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
            "guest_can_join": false,
            "name": "CHEESE",
            "num_joined_members": 37,
            "room_id": "!ol19s:bleecker.street",
            "topic": "Tasty tasty cheese",
            "world_readable": true
          }
        ],
        "next_batch": "p190q",
        "prev_batch": "p1902",
        "total_room_count_estimate": 115
      }
POST|/_matrix/client/r0/user_directory/search: {}
PUT|/_matrix/client/r0/profile/{userId}/displayname:
  method: :set_display_name
  requests:
    - args: ['@alice:example.com', 'Alice Margatroid']
      path: '/profile/%40alice%3Aexample.com/displayname'
      query: {}
      body:
        :displayname: 'Alice Margatroid'
  results:
    200: |
      {}
    429: *429
GET|/_matrix/client/r0/profile/{userId}/displayname:
  method: :get_display_name
  requests:
    - args: ['@alice:example.com']
      path: '/profile/%40alice%3Aexample.com/displayname'
      query: {}
      body: null
  results:
    200: |
      {
        "displayname": "Alice Margatroid"
      }
    429: *429
PUT|/_matrix/client/r0/profile/{userId}/avatar_url:
  method: :set_avatar_url
  requests:
    - args: ['@alice:example.com', 'mxc://matrix.org/wefh34uihSDRGhw34']
      path: '/profile/%40alice%3Aexample.com/avatar_url'
      query: {}
      body:
        :avatar_url: 'mxc://matrix.org/wefh34uihSDRGhw34'
  results:
    200: |
      {}
    429: *429
GET|/_matrix/client/r0/profile/{userId}/avatar_url:
  method: :get_avatar_url
  requests:
    - args: ['@alice:example.com']
      path: '/profile/%40alice%3Aexample.com/avatar_url'
      query: {}
      body: null
  results:
    200: |
      {
        "avatar_url": "mxc://matrix.org/wefh34uihSDRGhw34"
      }
    429: *429
GET|/_matrix/client/r0/profile/{userId}:
  method: :get_profile
  requests:
    - args: ['@alice:example.com']
      path: '/profile/%40alice%3Aexample.com'
      query: {}
      body: null
  results:
    200: |
      {
        "avatar_url": "mxc://matrix.org/wefh34uihSDRGhw34",
        "displayname": "Alice Margatroid"
      }
    429: *429
GET|/_matrix/client/r0/voip/turnServer:
  method: :get_turn_server
  requests:
    - args: []
      path: '/voip/turnServer'
      query: null
      body: null
  results:
    200: |
      {
        "username": "1443779631:@user:example.com",
        "password": "JlKfBy1QwLrO20385QyAtEyIv0=",
        "uris": [
          "turn:turn.example.com:3478?transport=udp",
          "turn:10.20.30.40:3478?transport=tcp",
          "turns:10.20.30.40:443?transport=tcp"
        ],
        "ttl": 86400
      }
    429: *429
PUT|/_matrix/client/r0/rooms/{roomId}/typing/{userId}:
  method: :set_typing
  requests:
    - args: ['!wefh3sfukhs:example.com', '@alice:example.com']
      path: '/rooms/%21wefh3sfukhs%3Aexample.com/typing/%40alice%3Aexample.com'
      query: null
      body:
        :typing: true
    - args: ['!wefh3sfukhs:example.com', '@alice:example.com', { typing: false }]
      path: '/rooms/%21wefh3sfukhs%3Aexample.com/typing/%40alice%3Aexample.com'
      query: null
      body:
        :typing: false
    - args: ['!wefh3sfukhs:example.com', '@alice:example.com', { timeout: 10 }]
      path: '/rooms/%21wefh3sfukhs%3Aexample.com/typing/%40alice%3Aexample.com'
      query: null
      body:
        :typing: true
        :timeout: 10000
  results:
    200: |
      {}
    429: *429
POST|/_matrix/client/r0/rooms/{roomId}/receipt/{receiptType}/{eventId}: {}
POST|/_matrix/client/r0/rooms/{roomId}/read_markers: {}
PUT|/_matrix/client/r0/presence/{userId}/status:
  method: :set_presence_status
  requests:
    - args: ['@alice:example.com', online, message: 'I am here']
      path: '/presence/%40alice%3Aexample.com/status'
      query: null
      body:
        :presence: 'online'
        :status_msg: 'I am here'
    - args: ['@alice:example.com', offline]
      path: '/presence/%40alice%3Aexample.com/status'
      query: null
      body:
        :presence: offline
  results:
    200: |
      {}
    429: *429
GET|/_matrix/client/r0/presence/{userId}/status:
  method: :get_presence_status
  requests:
    - args: ['@alice:example.com']
      path: '/presence/%40alice%3Aexample.com/status'
      query: null
      body: null
  results:
    200: |
      {
        "presence": "unavailable",
        "last_active_ago": 420845
      }
    403: |
      {
        "errcode": "M_FORBIDDEN",
        "error": "You are not allowed to see their presence"
      }
    404: |
      {
        "errcode": "M_UNKNOWN",
        "error": "An unknown error occurred"
      }
# POST|/_matrix/client/r0/presence/list/{userId}: {}
# GET|/_matrix/client/r0/presence/list/{userId}: {}
POST|/_matrix/media/r0/upload:
  method: :media_upload
  requests:
    - args: [ '{"json":true}', 'application/json' ]
      headers:
        content-type: 'application/json'
      body: '{"json":true}'
  results:
    200: |
      {
        "content_uri": "mxc://example.com/AQwafuaFswefuhsfAFAgsw"
      }
    429: *429
# GET|/_matrix/media/r0/download/{serverName}/{mediaId}: {}
# GET|/_matrix/media/r0/download/{serverName}/{mediaId}/{fileName}: {}
# GET|/_matrix/media/r0/thumbnail/{serverName}/{mediaId}: {}
GET|/_matrix/media/r0/preview_url:
  method: :get_url_preview
  requests:
    - args: ['https://matrix.org', { timestamp: 1510610716656 }]
      query:
        :url: 'https://matrix.org'
        :ts: 1510610716656 
    - args: ['https://matrix.org' ]
      query:
        :url: 'https://matrix.org'
  results:
    200: |
      {
        "og:title": "Matrix Blog Post",
        "og:description": "This is a really cool blog post from matrix.org",
        "og:image": "mxc://example.com/ascERGshawAWawugaAcauga",
        "og:image:type": "image/png",
        "og:image:height": 48,
        "og:image:width": 48,
        "matrix:image:size": 102400
      }
    429: *429
GET|/_matrix/media/r0/config:
  method: :get_media_config
  requests:
    - args: []
      query: null
      body: null
  results:
    200: |
      {
        "m.upload.size": 50000000
      }
    429: *429
PUT|/_matrix/client/r0/sendToDevice/{eventType}/{txnId}:
  method: :send_to_device
  requests:
    - args: ['m.new_device', { messages: { '@alice:example.com': { 'TLLBEANAAG': { 'example_content_key': 'value' } } }, txn_id: 35 }]
      path: '/sendToDevice/m.new_device/35'
      query: null
      body:
        :messages:
          :@alice:example.com:
            :TLLBEANAAG:
              :example_content_key: value
  results:
    200: |
      {}
GET|/_matrix/client/r0/devices:
  method: :get_devices
  requests:
    - args: []
      query: null
      body: null
  results:
    200: |
      {
        "devices": [
          {
            "device_id": "QBUAZIFURK",
            "display_name": "android",
            "last_seen_ip": "1.2.3.4",
            "last_seen_ts": 1474491775024
          }
        ]
      }
GET|/_matrix/client/r0/devices/{deviceId}:
  method: :get_device
  requests:
    - args: ['QBUAZIFURK']
      path: '/devices/QBUAZIFURK'
      query: null
      body: null
  results:
    200: |
      {
        "device_id": "QBUAZIFURK",
        "display_name": "android",
        "last_seen_ip": "1.2.3.4",
        "last_seen_ts": 1474491775024
      }
    404: |
      {}
PUT|/_matrix/client/r0/devices/{deviceId}:
  method: :set_device
  requests:
    - args: ['QBUAZIFURK', display_name: 'My other phone']
      path: '/devices/QBUAZIFURK'
      query: null
      body:
        :display_name: 'My other phone'
  results:
    200: |
      {}
    404: |
      {}
DELETE|/_matrix/client/r0/devices/{deviceId}:
  method: :delete_device
  requests:
    - args: ['QBUAZIFURK', auth: { type: 'example.type.foo', session: 'xxxxx', example_credential: 'verypoorsharedsecret' }]
      path: '/devices/QBUAZIFURK'
      query: null
      body:
        :auth:
          :type: 'example.type.foo'
          :session: 'xxxxx'
          :example_credential: 'verypoorsharedsecret'
  results:
    200: |
      {}
    401: |
      {
        "flows": [
          {
            "stages": [
              "example.type.foo"
            ]
          }
        ],
        "params": {
          "example.type.baz": {
            "example_key": "foobar"
          }
        },
        "session": "xxxxxxyz",
        "completed": [
          "example.type.foo"
        ]
      }
POST|/_matrix/client/r0/delete_devices: {}
POST|/_matrix/client/r0/keys/upload: {}
POST|/_matrix/client/r0/keys/query:
  method: :keys_query
  requests:
    - args: [{device_keys: { '@alice:example.com': [] }, token: 'string'}]
      query: null
      body:
        :timeout: 10000
        :device_keys:
          :@alice:example.com: []
        :token: string
  results:
    200: |
      {
        "failures": {},
        "device_keys": {
          "@alice:example.com": {
            "JLAFKJWSCS": {
              "user_id": "@alice:example.com",
              "device_id": "JLAFKJWSCS",
              "algorithms": [
                "m.olm.v1.curve25519-aes-sha256",
                "m.megolm.v1.aes-sha"
              ],
              "keys": {
                "curve25519:JLAFKJWSCS": "3C5BFWi2Y8MaVvjM8M22DBmh24PmgR0nPvJOIArzgyI",
                "ed25519:JLAFKJWSCS": "lEuiRJBit0IG6nUf5pUzWTUEsRVVe/HJkoKuEww9ULI"
              },
              "signatures": {
                "@alice:example.com": {
                  "ed25519:JLAFKJWSCS": "dSO80A01XiigH3uBiDVx/EjzaoycHcjq9lfQX0uWsqxl2giMIiSPR8a4d291W1ihKJL/a+myXS367WT6NAIcBA"
                }
              },
              "unsigned": {
                "device_display_name": "Alice's mobile phone"
              }
            }
          }
        }
      }
POST|/_matrix/client/r0/keys/claim:
  method: :claim_one_time_keys
  requests:
    - args: [{ '@alice:example.com': { 'JLAFKJWSCS': 'signed_curve25519' } }]
      path: '/keys/claim'
      query: null
      body:
        :timeout: 10000
        :one_time_keys:
          :'@alice:example.com':
            :'JLAFKJWSCS': 'signed_curve25519' 
  results:
    200: |
      {
        "failures": {},
        "one_time_keys": {
          "@alice:example.com": {
            "JLAFKJWSCS": {
              "signed_curve25519:AAAAHg": {
                "key": "zKbLg+NrIjpnagy+pIY6uPL4ZwEG2v+8F9lmgsnlZzs",
                "signatures": {
                  "@alice:example.com": {
                    "ed25519:JLAFKJWSCS": "FLWxXqGbwrb8SM3Y795eB6OA8bwBcoMZFXBqnTn58AYWZSqiD45tlBVcDa2L7RwdKXebW/VzDlnfVJ+9jok1Bw"
                  }
                }
              }
            }
          }
        }
      }
GET|/_matrix/client/r0/keys/changes:
  method: :get_key_changes
  requests:
    - args: [{ from: s72594_4483_1934, to: s75689_5632_2435 }]
      path: '/keys/changes'
      query:
        :from: s72594_4483_1934
        :to: s75689_5632_2435
      body: null
  results:
    200: |
      {
        "changed": [
          "@alice:example.com",
          "@bob:example.org"
        ],
        "left": [
          "@clara:example.com",
          "@doug:example.org"
        ]
      }
GET|/_matrix/client/r0/pushers:
  method: :get_pushers
  requests:
    - args: []
      path: '/pushers'
      query: null
      body: null
  results:
    200: |
      {
        "pushers": [
          {
            "pushkey": "Xp/MzCt8/9DcSNE9cuiaoT5Ac55job3TdLSSmtmYl4A=",
            "kind": "http",
            "app_id": "face.mcapp.appy.prod",
            "app_display_name": "Appy McAppface",
            "device_display_name": "Alice's Phone",
            "profile_tag": "xyz",
            "lang": "en-US",
            "data": {
              "url": "https://example.com/_matrix/push/v1/notify"
            }
          }
        ]
      }
POST|/_matrix/client/r0/pushers/set:
  method: :set_pusher
  requests:
    - args: ["APA91bHPRgkF3JUikC4ENAHEeMrd41Zxv3hVZjC9KtT8OvPVGJ-hQMRKRrZuJAEcl7B338qju59zJMjw2DELjzEvxwYv7hH5Ynpc1ODQ0aT4U4OFEeco8ohsN5PjL1iC2dNtk2BAokeMCg2ZXKqpc8FXKmhX94kIxQ", { kind: 'http', app_id: 'com.example.app.ios', app_name: 'Mat Rix', device_name: 'iPhone 9', lang: 'en', data: { url: 'https://push-gateway.location.here/_matrix/push/v1/notify', format: 'event_id_only' }, profile_tag: 'xxyyzz', append: false }]
      path: '/pushers/set'
      query: null
      body:
        :lang: "en"
        :kind: "http"
        :app_display_name: "Mat Rix"
        :device_display_name: "iPhone 9"
        :profile_tag: "xxyyzz"
        :app_id: "com.example.app.ios"
        :pushkey: "APA91bHPRgkF3JUikC4ENAHEeMrd41Zxv3hVZjC9KtT8OvPVGJ-hQMRKRrZuJAEcl7B338qju59zJMjw2DELjzEvxwYv7hH5Ynpc1ODQ0aT4U4OFEeco8ohsN5PjL1iC2dNtk2BAokeMCg2ZXKqpc8FXKmhX94kIxQ"
        :data:
          :url: "https://push-gateway.location.here/_matrix/push/v1/notify"
          :format: "event_id_only"
        :append: false
  results:
    200: |
      {}
    400: |
      {
        "error": "Missing parameters: lang, data",
        "errcode": "M_MISSING_PARAM"
      }
    429: *429
GET|/_matrix/client/r0/notifications:
  method: :get_notifications
  requests:
    - args: [{ from: 'xxxxx', limit: 20, only: 'highlight' }]
      path: '/notifications'
      query:
        :from: 'xxxxx'
        :limit: 20
        :only: 'highlight'
      body: null
    - args: [{ limit: 200 }]
      path: '/notifications'
      query:
        :limit: 200
      body: null
  results:
    200: |
      {
        "next_token": "abcdef",
        "notifications": [
          {
            "actions": [
              "notify"
            ],
            "profile_tag": "hcbvkzxhcvb",
            "read": true,
            "room_id": "!abcdefg:example.com",
            "ts": 1475508881945,
            "event": {
              "content": {
                "body": "This is an example text message",
                "msgtype": "m.text",
                "format": "org.matrix.custom.html",
                "formatted_body": "<b>This is an example text message</b>"
              },
              "type": "m.room.message",
              "event_id": "$143273582443PhrSn:example.org",
              "room_id": "!jEsUZKDJdhlrceRyVU:example.org",
              "sender": "@example:example.org",
              "origin_server_ts": 1432735824653,
              "unsigned": {
                "age": 1234
              }
            }
          }
        ]
      }
GET|/_matrix/client/r0/pushrules/:
  method: :get_pushrules
  requests:
    - args: []
      path: '/pushrules/'
      query: null
      body: null
  results:
    200: |
      {
        "global": {
          "content": [
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "sound",
                  "value": "default"
                },
                {
                  "set_tweak": "highlight"
                }
              ],
              "default": true,
              "enabled": true,
              "pattern": "alice",
              "rule_id": ".m.rule.contains_user_name"
            }
          ],
          "override": [
            {
              "actions": [
                "dont_notify"
              ],
              "conditions": [],
              "default": true,
              "enabled": false,
              "rule_id": ".m.rule.master"
            },
            {
              "actions": [
                "dont_notify"
              ],
              "conditions": [
                {
                  "key": "content.msgtype",
                  "kind": "event_match",
                  "pattern": "m.notice"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.suppress_notices"
            }
          ],
          "room": [],
          "sender": [],
          "underride": [
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "sound",
                  "value": "ring"
                },
                {
                  "set_tweak": "highlight",
                  "value": false
                }
              ],
              "conditions": [
                {
                  "key": "type",
                  "kind": "event_match",
                  "pattern": "m.call.invite"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.call"
            },
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "sound",
                  "value": "default"
                },
                {
                  "set_tweak": "highlight"
                }
              ],
              "conditions": [
                {
                  "kind": "contains_display_name"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.contains_display_name"
            },
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "sound",
                  "value": "default"
                },
                {
                  "set_tweak": "highlight",
                  "value": false
                }
              ],
              "conditions": [
                {
                  "kind": "room_member_count",
                  "is": "2"
                },
                {
                  "kind": "event_match",
                  "key": "type",
                  "pattern": "m.room.message"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.room_one_to_one"
            },
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "sound",
                  "value": "default"
                },
                {
                  "set_tweak": "highlight",
                  "value": false
                }
              ],
              "conditions": [
                {
                  "key": "type",
                  "kind": "event_match",
                  "pattern": "m.room.member"
                },
                {
                  "key": "content.membership",
                  "kind": "event_match",
                  "pattern": "invite"
                },
                {
                  "key": "state_key",
                  "kind": "event_match",
                  "pattern": "@alice:example.com"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.invite_for_me"
            },
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "highlight",
                  "value": false
                }
              ],
              "conditions": [
                {
                  "key": "type",
                  "kind": "event_match",
                  "pattern": "m.room.member"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.member_event"
            },
            {
              "actions": [
                "notify",
                {
                  "set_tweak": "highlight",
                  "value": false
                }
              ],
              "conditions": [
                {
                  "key": "type",
                  "kind": "event_match",
                  "pattern": "m.room.message"
                }
              ],
              "default": true,
              "enabled": true,
              "rule_id": ".m.rule.message"
            }
          ]
        }
      }
GET|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}:
  method: :get_pushrule
  requests:
    - args: [{ kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake'
      query: null
      body: null
  results:
    200: |
      {
        "actions": [
          "dont_notify"
        ],
        "pattern": "cake*lie",
        "rule_id": "nocake",
        "enabled": true,
        "default": false
      }
DELETE|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}: {}
PUT|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}: {}
GET|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}/enabled:
  method: :get_pushrule_enabled
  requests:
    - args: [{ kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake/enabled'
      query: null
      body: null
  results:
    200: |
      {
        "enabled": true
      }
PUT|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}/enabled:
  method: :set_pushrule_enabled
  requests:
    - args: [true, { kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake/enabled'
      query: null
      body:
        :enabled: true
  results:
    200: |
      {}
GET|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}/actions:
  method: :get_pushrule_actions
  requests:
    - args: [{ kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake/actions'
      query: null
      body: null
  results:
    200: |
      {
        "actions": [
          "notify"
        ]
      }
PUT|/_matrix/client/r0/pushrules/{scope}/{kind}/{ruleId}/actions:
  method: :set_pushrule_actions
  requests:
    - args: [['notify', 'coalesce'], { kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake/actions'
      query: null
      body:
        :actions:
          - notify
          - coalesce
    - args: ['notify', { kind: 'content', id: 'nocake' }]
      path: '/pushrules/global/content/nocake/actions'
      query: null
      body:
        :actions:
          - notify
  results:
    200: |
      {}
POST|/_matrix/client/r0/search: {}
GET|/_matrix/client/r0/user/{userId}/rooms/{roomId}/tags:
  method: :get_user_tags
  requests:
    - args: ['@alice:example.com', '!726s6s6q:example.com']
      path: '/user/%40alice%3Aexample.com/rooms/%21726s6s6q%3Aexample.com/tags'
      query: {}
      body: null
  results:
    200: |
      {
        "tags": {
          "m.favourite": {
            "order": 0.1
          },
          "u.Work": {
            "order": 0.7
          },
          "u.Customers": {}
        }
      }
PUT|/_matrix/client/r0/user/{userId}/rooms/{roomId}/tags/{tag}:
  method: :add_user_tag
  requests:
    - args: ['@alice:example.com', '!726s6s6q:example.com', 'u.work', order: 0.25]
      path: '/user/%40alice%3Aexample.com/rooms/%21726s6s6q%3Aexample.com/tags/u.work'
      query: {}
      body:
        :order: 0.25
  results:
    200: |
      {}
DELETE|/_matrix/client/r0/user/{userId}/rooms/{roomId}/tags/{tag}:
  method: :remove_user_tag
  requests:
    - args: ['@alice:example.com', '!726s6s6q:example.com', 'u.work']
      path: '/user/%40alice%3Aexample.com/rooms/%21726s6s6q%3Aexample.com/tags/u.work'
      query: {}
      body: null
  results:
    200: |
      {}
GET|/_matrix/client/r0/user/{userId}/account_data/{type}:
  method: :get_account_data
  requests:
    - args: ['@alice:example.com', 'org.example.custom.config']
      path: '/user/%40alice%3Aexample.com/account_data/org.example.custom.config'
      query: {}
      body: null
  results:
    200: |
      {
        "custom_account_data_key": "custom_config_value"
      }
PUT|/_matrix/client/r0/user/{userId}/account_data/{type}:
  method: :set_account_data
  requests:
    - args: ['@alice:example.com', 'org.example.custom.config', custom_account_data_key: 'custom_config_value']
      path: '/user/%40alice%3Aexample.com/account_data/org.example.custom.config'
      query: {}
      body:
        :custom_account_data_key: 'custom_config_value'
  results:
    200: |
      {}
GET|/_matrix/client/r0/user/{userId}/rooms/{roomId}/account_data/{type}:
  method: :get_room_account_data
  requests:
    - args: ['@alice:example.com', '!726s6s6q:example.com', 'org.example.custom.config']
      path: '/user/%40alice%3Aexample.com/rooms/%21726s6s6q%3Aexample.com/account_data/org.example.custom.config'
      query: {}
      body: null
  results:
    200: |
      {
        "custom_account_data_key": "custom_config_value"
      }
PUT|/_matrix/client/r0/user/{userId}/rooms/{roomId}/account_data/{type}:
  method: :set_room_account_data
  requests:
    - args: ['@alice:example.com', '!726s6s6q:example.com', 'org.example.custom.room.config', custom_account_data_key: 'custom_config_value']
      path: '/user/%40alice%3Aexample.com/rooms/%21726s6s6q%3Aexample.com/account_data/org.example.custom.room.config'
      query: {}
      body:
        :custom_account_data_key: 'custom_config_value'
  results:
    200: |
      {}
GET|/_matrix/client/r0/admin/whois/{userId}:
  method: :whois
  requests:
    - args: ['@peter:rabbit.rocks']
      path: '/admin/whois/%40peter%3Arabbit.rocks'
      query: null
      body: null
  results:
    200: |
      {
        "user_id": "@peter:rabbit.rocks",
        "devices": {
          "teapot": {
            "sessions": [
              {
                "connections": [
                  {
                    "ip": "127.0.0.1",
                    "last_seen": 1411996332123,
                    "user_agent": "curl/7.31.0-DEV"
                  },
                  {
                    "ip": "10.0.0.2",
                    "last_seen": 1411996332123,
                    "user_agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36"
                  }
                ]
              }
            ]
          }
        }
      }
GET|/_matrix/client/r0/rooms/{roomId}/context/{eventId}: {}
# GET|/_matrix/client/r0/login/cas/redirect: {}
# GET|/_matrix/client/r0/login/cas/ticket: {}
POST|/_matrix/client/r0/rooms/{roomId}/report/{eventId}:
  method: :report_event
  requests:
    - args: ['!637q39766251:example.com', '$something:example.com', { score: -100, reason: 'This makes me sad' }]
      path: '/rooms/%21637q39766251%3Aexample.com/report/%24something%3Aexample.com'
      query: {}
      body:
        :score: -100
        :reason: 'This makes me sad'
  results:
    200: |
      {}
GET|/_matrix/client/r0/thirdparty/protocols: {}
GET|/_matrix/client/r0/thirdparty/protocol/{protocol}: {}
GET|/_matrix/client/r0/thirdparty/location/{protocol}: {}
GET|/_matrix/client/r0/thirdparty/user/{protocol}: {}
GET|/_matrix/client/r0/thirdparty/location: {}
GET|/_matrix/client/r0/thirdparty/user: {}
POST|/_matrix/client/r0/user/{userId}/openid/request_token: {}
